# Create your housing DMatrix: housing_dmatrix
housing_dmatrix = xgb.DMatrix(data=X, label=y)

# Create the parameter dictionary for each tree: params
params = {"objective":"reg:linear", "max_depth":4}

# Perform cross-validation with early stopping: cv_results
cv_results = xgb.cv(dtrain=housing_dmatrix, params=params, nfold=3, num_boost_round=50, metrics="rmse", as_pandas=True, seed=123, early_stopping_rounds=10)

# Print cv_results
print(cv_results)

'''
Output:
    train-rmse-mean  train-rmse-std  test-rmse-mean  test-rmse-std
0     141871.635417      403.636200   142640.656250     705.559400
1     103057.033854       73.772531   104907.664062     111.112417
2      75975.966146      253.726099    79262.057291     563.763448
3      57420.531250      521.656754    61620.135417    1087.693857
4      44552.955729      544.170190    50437.562500    1846.448017
5      35763.946615      681.797429    43035.661458    2034.469207
6      29861.463542      769.572072    38600.880208    2169.796232
7      25994.676432      756.520565    36071.819011    2109.794452
8      23306.836588      759.238254    34383.184896    1934.546688
9      21459.769531      745.624998    33509.141276    1887.375284
10     20148.722005      749.611886    32916.807943    1850.894475
11     19215.382162      641.387014    32197.832682    1734.456935
12     18627.389323      716.256596    31770.854167    1802.154652
13     17960.694661      557.043073    31482.782552    1779.123767
14     17559.736979      631.412969    31389.990234    1892.319927
15     17205.712891      590.171393    31302.882162    1955.165902
16     16876.571940      703.631755    31234.059245    1880.704922
17     16597.662110      703.677609    31318.348959    1828.860617
18     16330.460937      607.274494    31323.634766    1775.910706
19     16005.972331      520.470326    31204.136719    1739.077370
20     15814.300781      518.604021    31089.862630    1756.021674
21     15493.405599      505.616447    31047.995443    1624.674840
22     15270.734049      502.019527    31056.916015    1668.042812
23     15086.381836      503.912899    31024.984375    1548.985605
24     14917.608724      486.206468    30983.684896    1663.130201
25     14709.589518      449.668684    30989.476563    1686.667469
26     14457.286133      376.787666    30952.113932    1613.172643
27     14185.567383      383.102234    31066.902344    1648.534310
28     13934.066732      473.465449    31095.641276    1709.225654
29     13749.644857      473.670123    31103.886068    1778.879154
30     13549.836914      454.898399    30976.085287    1744.514533
31     13413.485351      399.603618    30938.469401    1746.054047
32     13275.916016      415.408786    30931.001302    1772.468988
33     13085.878255      493.792509    30929.057943    1765.539740
34     12947.181641      517.790106    30890.630208    1786.511479
35     12846.027344      547.732372    30884.493490    1769.729215
36     12702.379232      505.523221    30833.542969    1691.002065
37     12532.243815      508.298673    30856.687500    1771.445978
38     12384.055013      536.225042    30818.016927    1782.784630
39     12198.444010      545.165197    30839.392578    1847.327022
40     12054.583333      508.841412    30776.966146    1912.780507
41     11897.036784      477.177937    30794.702474    1919.674832
42     11756.221680      502.992782    30780.955078    1906.820029
43     11618.846029      519.837502    30783.754557    1951.259784
44     11484.080404      578.428621    30776.731120    1953.446309
45     11356.552734      565.368794    30758.543620    1947.454953
46     11193.558268      552.298848    30729.971354    1985.700237
47     11071.315429      604.089960    30732.663411    1966.997809
48     10950.778320      574.862779    30712.241536    1957.751573
49     10824.865885      576.665756    30720.854818    1950.511520
'''